name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov gunicorn

    - name: Run tests with coverage
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        pytest tests/ -v --cov=app --cov-report=term-missing

    - name: Start Flask App
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        gunicorn --daemon --bind 0.0.0.0:8080 app:app
        sleep 5  # Wait for app to start

    - name: Run Gemini Evaluation
      run: |
        echo "Running Gemini Performance Evaluation..."
        response=$(curl -s http://localhost:8080/evaluate)
        echo "Evaluation Response:"
        echo $response
        
        # Extract and store performance metrics
        performance=$(echo $response | jq -r '."GK Performance"')
        echo "Gemini Knowledge Performance: $performance%"
        
        # Optional: Fail the build if performance is below threshold
        if (( $(echo "$performance < 70" | bc -l) )); then
          echo "Performance below threshold (70%)"
          exit 1
        fi

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/gemini-eval:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/gemini-eval:${{ github.sha }}
